#!/bin/bash

PROMPT_DIRECTORY="$HOME/dev-stuff/dotfiles/prompts"

clear

function gum_style() {
  # Just a wrapper for gum to make it easier to read where it's called
  local input_string="$1"
  gum style --border rounded --align center --width 50 --margin "0 0" --padding "0 6" --bold "$input_string"
}

function remove_temp_files() {
  # Deletes both temp files, silences problems because it's not important
  rm /tmp/audio-transcript-output.wav > /dev/null 2>&1
  rm /tmp/audio-transcript-output.txt > /dev/null 2>&1
}

gum_style 'What prompt would you like to use?'
prompt_template=$(find "$PROMPT_DIRECTORY" -type f -print0 | xargs -0 basename | gum choose)

gum_style 'Recording Audio... (press "q" to stop)'
ffmpeg -y -f avfoundation -i ":2" -ar 16000 /tmp/audio-transcript-output.wav > /dev/null 2>&1

gum_style 'Transcribing Audio...'
gum spin --spinner meter --show-output --title "OpenAI’s Whisper at work..." \
  -- curl https://api.openai.com/v1/audio/transcriptions \
  -H "Authorization: Bearer $OPENAI_API_KEY" \
  -H "Content-Type: multipart/form-data" \
  -F "file=@/tmp/audio-transcript-output.wav" \
  -F "language=en" \
  -F "response_format=text" \
  -F "model=whisper-1" > /tmp/audio-transcript-output.txt

if [ ! -s /tmp/audio-transcript-output.txt ]; then
  echo "Transcription failed or produced empty output. Exiting."
  remove_temp_files
  exit 1
fi

gum format < /tmp/audio-transcript-output.txt

gum_style 'Summarizing Transcript...'
chat_prompt="$(cat "$PROMPT_DIRECTORY/$prompt_template")\n\\\\n$(cat /tmp/audio-transcript-output.txt)\n\\\\n"

result=$(gum spin --spinner meter --show-output --title "OpenAI’s GPT-4 at work..." \
  -- sgpt --model "gpt-4" "${chat_prompt}")

if [ -z "$result" ]; then
  echo "Empty result. Exiting."
  remove_temp_files
  exit 1
fi

echo "$result" | gum format
echo "$result" | pbcopy

gum_style 'Done! Summary is in clipboard.'
remove_temp_files
